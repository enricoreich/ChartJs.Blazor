@page "/PieChart"
@using ChartJs.Blazor.ChartJS.Common
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.Sample.Shared.Components
@using Newtonsoft.Json
@inherits Microsoft.AspNetCore.Components.ComponentBase

<h2>Pie Chart</h2>
<div class="row">
    <button class="btn btn-primary" onclick="@UpdateChart">Update Chart </button>
</div>
<ChartJsPieChart ref="pieChartJs" Config="@pieChartConfig" Width="600" Height="300" />

<DataSetDisplay ref="_dataSetDisplay" bind-DataSetsStr="@DataSetsStr" Width="600" Height="300" />

@functions{

    private PieChartConfig pieChartConfig { get; set; }
    ChartJsPieChart pieChartJs;

    DataSetDisplay _dataSetDisplay;

    string DataSetsStr
    {
        get => JsonConvert.SerializeObject(pieChartConfig.Data.Datasets, Formatting.Indented);
        set
        {
            pieChartConfig.Data.Datasets = JsonConvert.DeserializeObject<List<PieChartDataset>>(value);
            Console.WriteLine(JsonConvert.SerializeObject(pieChartConfig.Data.Datasets));
        }
    }

    protected override void OnInit()
    {
        pieChartConfig = pieChartConfig ?? new PieChartConfig
        {
            CanvasId = "myFirstPieChart",
            Options = new PieChartOptions
            {
                Text = "Sample chart from Blazor",
                Display = true,
                Responsive = true,
                Animation = new DoughnutAnimation { AnimateRotate = true, AnimateScale = true }
            },
            Data = new PieChartData
            {
                Labels = new List<string> { "A", "B", "C", "D" },
                Datasets = new List<PieChartDataset>
        {
            new PieChartDataset
            {
                BackgroundColor = new[] {"#ff6384", "#55ee84", "#4463ff", "#efefef"},
                Data = new List<int> {4, 5, 6, 7},
                Label = "Light Red",
                BorderWidth = 0,
                HoverBackgroundColor = new[] {"#f06384"},
                HoverBorderColor = new[] {"#f06384"},
                HoverBorderWidth = new[] {1}, BorderColor = "#ffffff",
            }
        }
            }
        };
    }

    protected override void OnAfterRender()
    {
        Console.WriteLine("OnAfterRender");
        pieChartJs.Reload();

        _dataSetDisplay.OnUpdatedDataSetsStr += (dataSetsStr) =>
        {
            pieChartConfig.Data.Datasets = JsonConvert.DeserializeObject<List<PieChartDataset>>(dataSetsStr);
            pieChartJs.Reload();
        };
    }

    public void UpdateChart()
    {
        var rand = new Random();
        pieChartConfig.Data = new PieChartData
        {
            Labels = new List<string> { "A", "B", "C", "D" },
            Datasets = new List<PieChartDataset>
    {
        new PieChartDataset
        {
            BackgroundColor = new[] {"#ff6384", "#55ee84", "#4463ff", "#efefef"},
            Label = "Light Red",
            BorderWidth = 0,
            HoverBackgroundColor = new[] {"#f06384"},
            HoverBorderColor = new[] {"#f06384"},
            HoverBorderWidth = new[] {1}, BorderColor = "#ffffff",
            Data = new List<int> {rand.Next(10), rand.Next(10), rand.Next(10), rand.Next(10)}
        }
    }
        };

        pieChartJs.Reload();
    }

}